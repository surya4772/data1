<?xml version="1.0" encoding="UTF-8"?><flow-definition>
    <actions/>
    <description/>
    <keepDependencies>false</keepDependencies>
    <properties>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>COLLECTION_URL</name>
                    <defaultValue/>
                    <description>URL to a JSON file defining your platform extension collection.</description>
                </hudson.model.StringParameterDefinition>
                <com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
                    <name>AWS_CREDENTIALS</name>
                    <description>AWS access key and secret key for your account</description>
                    <defaultValue/>
                    <credentialType>com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl</credentialType>
                    <required>false</required>
                </com.cloudbees.plugins.credentials.CredentialsParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
        <com.sonyericsson.rebuild.RebuildSettings>
            <autoRebuild>false</autoRebuild>
            <rebuildDisabled>false</rebuildDisabled>
        </com.sonyericsson.rebuild.RebuildSettings>
    </properties>
    <triggers/>
    <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition">
        <script>node {

    sh("wget ${COLLECTION_URL} -O collection.json")

    println "Reading in values from file..."
    extensions = parseJSON(readFile('collection.json'))

    println(extensions);
    println "Obtained values locally...";

    extensionCount = extensions.size
    println "Number of platform extensions: ${extensionCount}"

    // For loop iterating over the data map obtained from the provided JSON file
    for (int i = 0; i &lt; extensionCount; i++) {
        def extension = extensions.get(i);
        println("Platform Extension URL: " + extension.url)
        build job: '/Platform_Management/Load_Platform_Extension', parameters: [[$class: 'StringParameterValue', name: 'GIT_URL', value: extension.url], [$class: 'StringParameterValue', name: 'GIT_REF', value: 'master'], [$class: 'CredentialsParameterValue', name: 'AWS_CREDENTIALS', value: "${AWS_CREDENTIALS}"]]
    }

}

@NonCPS
    def parseJSON(text) {
    def slurper = new groovy.json.JsonSlurper();
    Map data = slurper.parseText(text)
    slurper = null

    def extensions = []
    for ( i = 0 ; i &lt; data.extensions.size; i++ ) {
        String url = data.extensions[i].url
        extensions[i] = ['url' : url]
    }

    data = null

    return extensions
}
            </script>
        <sandbox>true</sandbox>
    </definition>
</flow-definition>